@model LaptopShopMVC.Models.NHANVIEN

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_layout.cshtml";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal" style="text-align:center">
        <h2>Sửa Nhân Viên</h2>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.MANHANVIEN)

        <div class="form-group">
            @Html.LabelFor(model => model.TENNHANVIEN, htmlAttributes: new { @class = "control-label col-md-2" })
            <div style="width: 50%; display: inline-block; text-align: left;">
                @Html.EditorFor(model => model.TENNHANVIEN, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TENNHANVIEN, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HINH, htmlAttributes: new { @class = "control-label col-md-2" })
            <div style="width: 50%; display: inline-block; text-align: left;">
                @Html.EditorFor(model => model.HINH, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HINH, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NGAYSINH, htmlAttributes: new { @class = "control-label col-md-2" })
            <div style="width: 50%; display: inline-block; text-align: left;">
                @Html.EditorFor(model => model.NGAYSINH, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NGAYSINH, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CCCD, htmlAttributes: new { @class = "control-label col-md-2" })
            <div style="width: 50%; display: inline-block; text-align: left;">
                @Html.EditorFor(model => model.CCCD, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CCCD, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CHUCVU, htmlAttributes: new { @class = "control-label col-md-2" })
            <div style="width: 50%; display: inline-block; text-align: left;">
                @Html.EditorFor(model => model.CHUCVU, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CHUCVU, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DIACHI, htmlAttributes: new { @class = "control-label col-md-2" })
            <div style="width: 50%; display: inline-block; text-align: left;">
                @Html.EditorFor(model => model.DIACHI, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DIACHI, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EMAIL, htmlAttributes: new { @class = "control-label col-md-2" })
            <div style="width: 50%; display: inline-block; text-align: left;">
                @Html.EditorFor(model => model.EMAIL, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EMAIL, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SDT, htmlAttributes: new { @class = "control-label col-md-2" })
            <div style="width: 50%; display: inline-block; text-align: left;">
                @Html.EditorFor(model => model.SDT, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SDT, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-12">
                <input type="submit" value="Save" class="btn btn-success" />
                <div class="btn btn-info">
                    @Html.ActionLink("Back", "Index", null, new { style = "color: white;" })
                </div>
            </div>
        </div>
    </div>
}

<style>
    .form-group{
        margin: 10px
    }
</style>
